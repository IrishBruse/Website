// @ts-nocheck
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/models/home/models/Gameboy.glb --types true --keepnames --keepgroups true --meta true --shadows true --precision 5
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Plane006: THREE.Mesh
    Plane006_1: THREE.Mesh
    A: THREE.Mesh
    B: THREE.Mesh
    Dpad: THREE.Mesh
    Select: THREE.Mesh
    Start: THREE.Mesh
  }
  materials: {
    GameboyShell: THREE.MeshPhysicalMaterial
    GameboyScreenBorder: THREE.MeshPhysicalMaterial
    Button: THREE.MeshPhysicalMaterial
    DPad: THREE.MeshPhysicalMaterial
    StartSelect: THREE.MeshPhysicalMaterial
  }
}

type ActionName = 'GameboyAction' | 'A' | 'B' | 'Dpad' | 'GBScreen' | 'Select' | 'Start'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export function Model(props: JSX.IntrinsicElements['group'])
{
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/home/models/Gameboy.glb') as unknown as GLTFResult
  const { actions } = useAnimations<GLTFActions>(animations, group)
  return (
    <group animations={actions} ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Gameboy" position={[-0.42859, 0.01547, 0.13042]} rotation={[0, 0.30724, Math.PI]} userData={{ name: 'Gameboy' }}>
          <mesh name="Plane006" castShadow receiveShadow geometry={nodes.Plane006.geometry} material={materials.GameboyShell} />
          <mesh name="Plane006_1" castShadow receiveShadow geometry={nodes.Plane006_1.geometry} material={materials.GameboyScreenBorder} />
          <mesh name="A" castShadow receiveShadow geometry={nodes.A.geometry} material={materials.Button} position={[0.01447, 0.015, 0.02255]} userData={{ name: 'A' }} />
          <mesh name="B" castShadow receiveShadow geometry={nodes.B.geometry} material={materials.Button} position={[0.02738, 0.015, 0.01198]} userData={{ name: 'B' }} />
          <mesh name="Dpad" castShadow receiveShadow geometry={nodes.Dpad.geometry} material={materials.DPad} position={[-0.02116, 0.01642, 0.01931]} userData={{ name: 'Dpad' }} />
          <group name="GBScreen" position={[0, 0.01594, -0.03627]} userData={{ name: 'GBScreen' }} >
            {props.children}
          </group>
          <mesh name="Select" castShadow receiveShadow geometry={nodes.Select.geometry} material={materials.StartSelect} position={[-0.005, 0.01594, 0.0437]} userData={{ name: 'Select' }} />
          <mesh name="Start" castShadow receiveShadow geometry={nodes.Start.geometry} material={materials.StartSelect} position={[0.005, 0.01594, 0.0437]} userData={{ name: 'Start' }} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/home/models/Gameboy.glb')
