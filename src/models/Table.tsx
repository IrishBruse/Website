// @ts-nocheck
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/models/home/models/Table.glb --types true --keepnames --keepgroups true --meta true --shadows true --precision 5
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Table: THREE.Mesh
    Legs: THREE.Mesh
  }
  materials: {
    Table: THREE.MeshStandardMaterial
    TableLeg: THREE.MeshStandardMaterial
  }
}

type ActionName = 'Table' | 'Legs'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/home/models/Table.glb') as unknown as GLTFResult
  const { actions } = useAnimations<GLTFActions>(animations, group)
  return (
    <group animations={actions} ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh name="Table" castShadow receiveShadow geometry={nodes.Table.geometry} material={materials.Table} position={[0, 0, -0.12086]} userData={{ name: 'Table' }}>
          <mesh name="Legs" castShadow receiveShadow geometry={nodes.Legs.geometry} material={materials.TableLeg} userData={{ name: 'Legs' }} />
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload('/home/models/Table.glb')
