// @ts-nocheck
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/models/home/models/Phone.glb --types true --keepnames --keepgroups true --meta true --shadows true --precision 5
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Phone: THREE.Mesh
  }
  materials: {
    Phone: THREE.MeshStandardMaterial
  }
}

type ActionName = 'PhoneAction' | 'PhoneScreen'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/home/models/Phone.glb') as unknown as GLTFResult
  const { actions } = useAnimations<GLTFActions>(animations, group)
  return (
    <group animations={actions} ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh name="Phone" castShadow receiveShadow geometry={nodes.Phone.geometry} material={materials.Phone} position={[0.38054, 0.00108, 0.15073]} rotation={[0, -0.27096, 0]} userData={{ name: 'Phone' }}>
          <group name="PhoneScreen" position={[0, 0.00346, 0]} userData={{ name: 'PhoneScreen' }} />
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload('/home/models/Phone.glb')
